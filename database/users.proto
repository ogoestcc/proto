syntax = "proto2";

package proto.database;

import "types.proto";

message GetUsers {
  message Metadata {
    required uint64 total = 1;
    optional proto.types.UserWhereClause where = 2;
  }

  message Request {
    optional proto.types.UserWhereClause where = 1;
  }

  message Response {
    required Metadata metadata = 1;
    repeated proto.types.User users = 2;
  }
}

message GetUsersAndRatings {
  message Metadata {
    required uint64 total = 1;
    optional proto.types.UserWhereClause user_where = 2;
    optional proto.types.RatingWhereClause rating_where = 4;
  }

  message Request {
    optional proto.types.UserWhereClause user_where = 1;
    optional proto.types.RatingWhereClause rating_where = 2;
  }

  message UsersRatings {
    required proto.types.User user = 2;
    repeated proto.types.Rating ratings = 3;
  }

  message Response {
    required Metadata metadata = 1;
    repeated UsersRatings users = 2;
  }
}

message GetUsersAndContents {
  message Metadata {
    required uint64 total = 1;
    optional proto.types.UserWhereClause user_where = 2;
  }

  message UsersContents {
    required proto.types.User user = 2;
    repeated proto.types.Content preferences = 3;
  }

  message Response {
    required Metadata metadata = 1;
    repeated UsersContents users = 2;
  }
}

message Operations {
  message AllowedChanges {
    optional string email = 1;
    optional string password = 2;
  }

  message Create {
    required AllowedChanges user = 1;
  }

  message Retrieve {
    optional proto.types.UserWhereClause where = 1;
  }

  message Update {
    required AllowedChanges user = 1;
    required proto.types.UserWhereClause where = 2;
  }

  message Delete {
    required proto.types.UserWhereClause where = 1;
  }
}

service Users {
  rpc get_users(GetUsers.Request) returns (GetUsers.Response) {}
  rpc get_users_and_ratings(GetUsersAndRatings.Request)
      returns (GetUsersAndRatings.Response) {}
  rpc get_users_and_contents(GetUsers.Request)
      returns (GetUsersAndContents.Response) {}

  //* CRUD
  rpc create(Operations.Create) returns (proto.types.User) {}
  rpc retrieve(Operations.Retrieve) returns (proto.types.User) {}
  rpc update(Operations.Update) returns (proto.types.User) {}
  rpc delete (Operations.Delete) returns (proto.types.User) {}
}